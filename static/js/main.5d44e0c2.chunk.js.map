{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","React","memo","todos","selectedTodo","onSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","status","onChangeQuery","onChangeFilter","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","currentUser","setCurrentUser","useEffect","userId","href","email","name","App","selectedTodos","setSelectedTodos","loadingTodos","setLoadingTodos","setSelectedTodo","setQuery","setStatus","visibleTodos","todosWithQuery","filter","toLocaleLowerCase","includes","filtredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d44e0c2.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null,\n  onSelectedTodo: (seletedTodo: Todo | null) => void,\n}\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({ todos, selectedTodo, onSelectedTodo }) => {\n    return (\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(todo => (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className={\n                classNames({ 'has-background-info-light': selectedTodo })\n              }\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(todo.completed\n                  ? 'has-text-success' : 'has-text-danger')}\n                >\n                  {todo.title}\n\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    onSelectedTodo(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(selectedTodo?.id === todo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye')}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  },\n);\n","import React from 'react';\n\ninterface Props {\n  query: string;\n  status: string;\n  onChangeQuery: (query: string) => void,\n  onChangeFilter: (status: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = React.memo((\n  {\n    query, status, onChangeQuery, onChangeFilter,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={(event) => onChangeFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => onChangeQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onChangeQuery('')}\n          />\n        </span>\n      )}\n\n    </p>\n  </form>\n));\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(2000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo,\n  onSelectedTodo: (seleсtedTodo: Todo | null) => void,\n}\n\nexport const TodoModal: React.FC<Props>\n  = React.memo(({ onSelectedTodo, selectedTodo }) => {\n    const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n    useEffect(() => {\n      getUser(selectedTodo.userId).then(setCurrentUser);\n    },\n    []);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {!currentUser ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => onSelectedTodo(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)}\n                {' by '}\n\n                <a href={`mailto:${currentUser.email}`}>\n                  {currentUser.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  });\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [selectedTodos, setSelectedTodos] = useState<Todo[]>([]);\n  const [loadingTodos, setLoadingTodos] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  useEffect(() => {\n    getTodos().then(todos => {\n      setSelectedTodos(todos);\n      setLoadingTodos(false);\n    });\n  }, []);\n\n  const filtredTodos = () => {\n    const todosWithQuery = () => {\n      if (query === '') {\n        return selectedTodos;\n      }\n\n      return selectedTodos.filter(todo => (\n        todo.title.toLocaleLowerCase().includes(query.toLocaleLowerCase())));\n    };\n\n    switch (status) {\n      case 'active':\n        return todosWithQuery().filter(todo => !todo.completed);\n\n      case 'completed':\n        return todosWithQuery().filter(todo => todo.completed);\n\n      case 'all':\n      default:\n        return todosWithQuery();\n    }\n  };\n\n  const visibleTodos = filtredTodos();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                status={status}\n                onChangeQuery={setQuery}\n                onChangeFilter={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {(!loadingTodos)\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectedTodo={setSelectedTodo}\n                  />\n                ) : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSelectedTodo={setSelectedTodo}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}